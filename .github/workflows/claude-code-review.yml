name: Claude Code Review

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout repository
        id: deno_claude_checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: deno_claude_review
        uses: anthropics/claude-code-action@a6888c03f22170d00d2a92fa2317584ca7d5e108 # v1.0
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.CLAUDE_CODE_REVIEW_PAT }}

          # Direct prompt for comprehensive code review (no test execution)
          prompt: |
            Please perform a comprehensive code review of the entire project on the master branch.
            
            DO NOT run any tests, linters, or Deno commands. Focus solely on code review and analysis.
            
            Review the following aspects:
            
            ## Code Quality & Architecture
            - Overall project structure and organization
            - Design patterns and architectural decisions
            - Code consistency and adherence to TypeScript/Deno best practices
            - Proper use of Cliffy framework patterns
            - Error handling and edge cases coverage
            
            ## Security
            - Input validation and sanitization
            - Path traversal and injection vulnerabilities
            - Proper permission usage (--allow-read, --allow-write, --allow-net)
            - Sensitive data handling
            - Dependency security (check for known vulnerable packages)
            
            ## Performance
            - Potential performance bottlenecks
            - Efficient use of async/await patterns
            - Memory usage considerations
            - Binary compilation optimization opportunities
            
            ## Maintainability
            - Code readability and clarity
            - Documentation quality (comments, JSDoc, README)
            - Test coverage adequacy (review test files, don't run them)
            - Technical debt and refactoring opportunities
            
            ## GitHub Workflows
            - Review all workflows in .github/workflows/ for correctness
            - Check for workflow best practices and efficiency
            - Validate workflow syntax and job dependencies
            - Security of workflow permissions and secrets usage
            
            ## Suggestions for Improvement
            - Prioritized list of improvements (critical, high, medium, low)
            - Specific code examples where applicable
            - Recommendations for next development steps
            
            Focus on providing actionable feedback that improves code quality, security, and maintainability.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Note: Claude Code Action will have access to standard tools for validation checks

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

# ORGANIZATION SECRETS:
# Uses organization-level secrets for Claude Code integration:
# - CLAUDE_CODE_OAUTH_TOKEN: OAuth token for Claude Code API access
# - ANTHROPIC_API_KEY: Anthropic API key for Claude model access
# Both secrets are configured at the organization level for security

