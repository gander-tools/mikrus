name: "üîç Automated Code Review (Claude)"

# Automated pull request reviews using Claude AI
# Triggers: PR opened/synchronized (new commits pushed)
# Purpose: Provides AI-powered code quality analysis, security checks, and best practices review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  automated-pr-review:
    name: "üîç Claude AI: Pull Request Code Review"
    # Automatically reviews PRs for code quality, security, testing, and TypeScript/CLI best practices
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # Minimal write access for comments only
      issues: read
      id-token: write
    
    steps:
      - name: "üì• Repository: Checkout PR Code"
        # Downloads PR changes for comprehensive code analysis
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 1
          # Security: Prevent token exposure in URLs
          persist-credentials: false

      - name: "üß† Claude AI: Analyze Code Changes"
        # Performs automated code review using Claude AI with TypeScript CLI focus
        id: claude-review
        uses: anthropics/claude-code-action@a47fdbe49f641eadaf74042deb4cd9dfb8a981d5 # Pinned SHA for security
        timeout-minutes: 15 # Security: Prevent long-running executions
        env:
          # Security: Limit environment variable exposure
          NODE_ENV: production
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this TypeScript CLI pull request focusing on:
            - Code quality using our Biome and TypeScript standards
            - Gluegun CLI framework best practices
            - Test coverage with Vitest
            - Security concerns for CLI tools
            - Performance and Node.js 20+ compatibility
            - TDD methodology compliance
            
            Reference existing patterns in src/commands/ and use Bun commands. Be constructive and specific.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Security: Restrict to read-only analysis and safe validation commands
          allowed_tools: "Bash(bun run test),Bash(bun run check),Bash(bun run lint)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

